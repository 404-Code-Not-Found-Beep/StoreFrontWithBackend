{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jake\\\\github\\\\React course\\\\begining\\\\Capstone1-storefront\\\\01-starting-project\\\\src\\\\components\\\\Checkout\\\\Checkoutfunctional.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"../../components/Cart/Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isValidPost = value => value.trim().length !== 5;\n\nconst CheckoutFunctional = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    //putting them all as true means an error doesnt  show on load\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  const userNameRef = localStorage.getItem(\"username\");\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalCodeIsValid = !isValidPost(enteredPostalCode);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    } //sends the userdata through to the confirm button in cart\n\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostalCode,\n      username: userNameRef\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? \"\" : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? \"\" : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputsValidity.postalCode ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Please enter a valid Post Code! (5 chars long)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Please enter a valid City!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutFunctional, \"W/ZU6UWy1tywwWBoU5M2mEuFW44=\");\n\n_c = CheckoutFunctional;\nexport default CheckoutFunctional;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutFunctional\");","map":{"version":3,"names":["useRef","useState","classes","isEmpty","value","trim","isValidPost","length","CheckoutFunctional","props","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalInputRef","cityInputRef","userNameRef","localStorage","getItem","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredCityIsValid","enteredStreetIsValid","enteredPostalCodeIsValid","formIsValid","onConfirm","username","nameControlClasses","control","invalid","streetControlClasses","cityControlClasses","postalCodeControlClasses","form","actions","onCancel","submit"],"sources":["C:/Users/Jake/github/React course/begining/Capstone1-storefront/01-starting-project/src/components/Checkout/Checkoutfunctional.js"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nimport classes from \"../../components/Cart/Checkout.module.css\";\n\nconst isEmpty = (value) => value.trim() === \"\";\nconst isValidPost = (value) => value.trim().length !== 5;\n\nconst CheckoutFunctional = (props) => {\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    //putting them all as true means an error doesnt  show on load\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true,\n  });\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const userNameRef = localStorage.getItem(\"username\");\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalCodeIsValid = !isValidPost(enteredPostalCode);\n\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid,\n    });\n\n    const formIsValid =\n      enteredNameIsValid &&\n      enteredStreetIsValid &&\n      enteredCityIsValid &&\n      enteredPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n    //sends the userdata through to the confirm button in cart\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostalCode,\n      username: userNameRef,\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${\n    formInputsValidity.name ? \"\" : classes.invalid\n  }`;\n  const streetControlClasses = `${classes.control} ${\n    formInputsValidity.street ? \"\" : classes.invalid\n  }`;\n  const cityControlClasses = `${classes.control} ${\n    formInputsValidity.city ? \"\" : classes.invalid\n  }`;\n  const postalCodeControlClasses = `${classes.control} ${\n    formInputsValidity.postalCode ? \"\" : classes.invalid\n  }`;\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameControlClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\n        {!formInputsValidity.name && <p> Please enter a valid name!</p>}\n      </div>\n      <div className={streetControlClasses}>\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\n        {!formInputsValidity.street && <p> Please enter a valid street!</p>}\n      </div>\n      <div className={postalCodeControlClasses}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input type=\"text\" id=\"postal\" ref={postalInputRef} />\n        {!formInputsValidity.postalCode && (\n          <p> Please enter a valid Post Code! (5 chars long)</p>\n        )}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\n        {!formInputsValidity.city && <p> Please enter a valid City!</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default CheckoutFunctional;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}