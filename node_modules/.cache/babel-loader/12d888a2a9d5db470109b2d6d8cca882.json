{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jake\\\\github\\\\React course\\\\begining\\\\Capstone1-storefront\\\\01-starting-project\\\\src\\\\components\\\\Profile\\\\ProfileForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./ProfileForm.module.css\";\nimport { useRef, useContext, useState } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport { useNavigate } from \"react-router-dom\";\nimport React from \"react\"; //good use of useRef\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileForm = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const newPasswordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const [passwordBtnPressed, setPasswordBtnPressed] = useState(false);\n\n  const changePasswordHandler = () => {\n    setPasswordBtnPressed(true);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredNewPassword = newPasswordInputRef.current.value; //can add validation here\n\n    fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCnr-1wO8bfm99LaYguLnmacZehovtdJ54\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        idToken: authCtx.token,\n        password: enteredNewPassword,\n        returnSecureToken: false\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      //could add the error handling here, but we are just adding the min length on password input instead\n      //so we are assuming that this always succeeds\n      navigate(\"/\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.action,\n      onClick: changePasswordHandler,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Change password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"new-password\",\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"new-password\",\n          minLength: \"6\",\n          ref: newPasswordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.action,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileForm, \"xu0MYdICmp0MCADRjHtmgvpNTeg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ProfileForm;\nexport default ProfileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"names":["classes","useRef","useContext","useState","AuthContext","useNavigate","React","ProfileForm","navigate","newPasswordInputRef","authCtx","passwordBtnPressed","setPasswordBtnPressed","changePasswordHandler","submitHandler","event","preventDefault","enteredNewPassword","current","value","fetch","method","body","JSON","stringify","idToken","token","password","returnSecureToken","headers","then","response","action","form","control"],"sources":["C:/Users/Jake/github/React course/begining/Capstone1-storefront/01-starting-project/src/components/Profile/ProfileForm.js"],"sourcesContent":["import classes from \"./ProfileForm.module.css\";\nimport { useRef, useContext, useState } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport { useNavigate } from \"react-router-dom\";\nimport React from \"react\";\n\n//good use of useRef\n\nconst ProfileForm = () => {\n  const navigate = useNavigate();\n  const newPasswordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const [passwordBtnPressed, setPasswordBtnPressed] = useState(false);\n\n  const changePasswordHandler = () => {\n    setPasswordBtnPressed(true);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredNewPassword = newPasswordInputRef.current.value;\n    //can add validation here\n\n    fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCnr-1wO8bfm99LaYguLnmacZehovtdJ54\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: authCtx.token,\n          password: enteredNewPassword,\n          returnSecureToken: false,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then((response) => {\n      //could add the error handling here, but we are just adding the min length on password input instead\n      //so we are assuming that this always succeeds\n      navigate(\"/\");\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.action} onClick={changePasswordHandler}>\n        <button> Change password</button>\n      </div>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"new-password\">New Password</label>\n          <input\n            type=\"password\"\n            id=\"new-password\"\n            minLength=\"6\"\n            ref={newPasswordInputRef}\n          />\n        </div>\n        <div className={classes.action}>\n          <button>Change Password</button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default ProfileForm;\n"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,0BAApB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAMI,mBAAmB,GAAGR,MAAM,EAAlC;EACA,MAAMS,OAAO,GAAGR,UAAU,CAACE,WAAD,CAA1B;EACA,MAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CT,QAAQ,CAAC,KAAD,CAA5D;;EAEA,MAAMU,qBAAqB,GAAG,MAAM;IAClCD,qBAAqB,CAAC,IAAD,CAArB;EACD,CAFD;;EAIA,MAAME,aAAa,GAAIC,KAAD,IAAW;IAC/BA,KAAK,CAACC,cAAN;IAEA,MAAMC,kBAAkB,GAAGR,mBAAmB,CAACS,OAApB,CAA4BC,KAAvD,CAH+B,CAI/B;;IAEAC,KAAK,CACH,uGADG,EAEH;MACEC,MAAM,EAAE,MADV;MAEEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBC,OAAO,EAAEf,OAAO,CAACgB,KADE;QAEnBC,QAAQ,EAAEV,kBAFS;QAGnBW,iBAAiB,EAAE;MAHA,CAAf,CAFR;MAOEC,OAAO,EAAE;QACP,gBAAgB;MADT;IAPX,CAFG,CAAL,CAaEC,IAbF,CAaQC,QAAD,IAAc;MACnB;MACA;MACAvB,QAAQ,CAAC,GAAD,CAAR;IACD,CAjBD;EAkBD,CAxBD;;EA0BA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE;MAAK,SAAS,EAAER,OAAO,CAACgC,MAAxB;MAAgC,OAAO,EAAEnB,qBAAzC;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAM,SAAS,EAAEb,OAAO,CAACiC,IAAzB;MAA+B,QAAQ,EAAEnB,aAAzC;MAAA,wBACE;QAAK,SAAS,EAAEd,OAAO,CAACkC,OAAxB;QAAA,wBACE;UAAO,OAAO,EAAC,cAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,UADP;UAEE,EAAE,EAAC,cAFL;UAGE,SAAS,EAAC,GAHZ;UAIE,GAAG,EAAEzB;QAJP;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAUE;QAAK,SAAS,EAAET,OAAO,CAACgC,MAAxB;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAzDD;;GAAMzB,W;UACaF,W;;;KADbE,W;AA2DN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}