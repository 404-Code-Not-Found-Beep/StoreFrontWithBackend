{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jake\\\\github\\\\React course\\\\begining\\\\Capstone1-storefront\\\\01-starting-project\\\\src\\\\components\\\\Profile\\\\ProfileForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./ProfileForm.module.css\";\nimport { useRef, useContext, useState } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport { useNavigate } from \"react-router-dom\"; //good use of useRef\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileForm = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const newPasswordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const [passwordBtnPressed, setPasswordBtnPressed] = useState(false);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredNewPassword = newPasswordInputRef.current.value; //can add validation here\n\n    fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCnr-1wO8bfm99LaYguLnmacZehovtdJ54\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        idToken: authCtx.token,\n        password: enteredNewPassword,\n        returnSecureToken: false\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      //could add the error handling here, but we are just adding the min length on password input instead\n      //so we are assuming that this always succeeds\n      navigate(\"/\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-password\",\n        children: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"new-password\",\n        minLength: \"6\",\n        ref: newPasswordInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.action,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileForm, \"xu0MYdICmp0MCADRjHtmgvpNTeg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ProfileForm;\nexport default ProfileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"names":["classes","useRef","useContext","useState","AuthContext","useNavigate","ProfileForm","navigate","newPasswordInputRef","authCtx","passwordBtnPressed","setPasswordBtnPressed","submitHandler","event","preventDefault","enteredNewPassword","current","value","fetch","method","body","JSON","stringify","idToken","token","password","returnSecureToken","headers","then","response","form","control","action"],"sources":["C:/Users/Jake/github/React course/begining/Capstone1-storefront/01-starting-project/src/components/Profile/ProfileForm.js"],"sourcesContent":["import classes from \"./ProfileForm.module.css\";\nimport { useRef, useContext, useState } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport { useNavigate } from \"react-router-dom\";\n\n//good use of useRef\n\nconst ProfileForm = () => {\n  const navigate = useNavigate();\n  const newPasswordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const [passwordBtnPressed, setPasswordBtnPressed] = useState(false);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredNewPassword = newPasswordInputRef.current.value;\n    //can add validation here\n\n    fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCnr-1wO8bfm99LaYguLnmacZehovtdJ54\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: authCtx.token,\n          password: enteredNewPassword,\n          returnSecureToken: false,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then((response) => {\n      //could add the error handling here, but we are just adding the min length on password input instead\n      //so we are assuming that this always succeeds\n      navigate(\"/\");\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"new-password\">New Password</label>\n        <input\n          type=\"password\"\n          id=\"new-password\"\n          minLength=\"6\"\n          ref={newPasswordInputRef}\n        />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,0BAApB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAEA;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;EACA,MAAMG,mBAAmB,GAAGP,MAAM,EAAlC;EACA,MAAMQ,OAAO,GAAGP,UAAU,CAACE,WAAD,CAA1B;EACA,MAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,KAAD,CAA5D;;EAEA,MAAMS,aAAa,GAAIC,KAAD,IAAW;IAC/BA,KAAK,CAACC,cAAN;IAEA,MAAMC,kBAAkB,GAAGP,mBAAmB,CAACQ,OAApB,CAA4BC,KAAvD,CAH+B,CAI/B;;IAEAC,KAAK,CACH,uGADG,EAEH;MACEC,MAAM,EAAE,MADV;MAEEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBC,OAAO,EAAEd,OAAO,CAACe,KADE;QAEnBC,QAAQ,EAAEV,kBAFS;QAGnBW,iBAAiB,EAAE;MAHA,CAAf,CAFR;MAOEC,OAAO,EAAE;QACP,gBAAgB;MADT;IAPX,CAFG,CAAL,CAaEC,IAbF,CAaQC,QAAD,IAAc;MACnB;MACA;MACAtB,QAAQ,CAAC,GAAD,CAAR;IACD,CAjBD;EAkBD,CAxBD;;EA0BA,oBACE;IAAM,SAAS,EAAEP,OAAO,CAAC8B,IAAzB;IAA+B,QAAQ,EAAElB,aAAzC;IAAA,wBACE;MAAK,SAAS,EAAEZ,OAAO,CAAC+B,OAAxB;MAAA,wBACE;QAAO,OAAO,EAAC,cAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,UADP;QAEE,EAAE,EAAC,cAFL;QAGE,SAAS,EAAC,GAHZ;QAIE,GAAG,EAAEvB;MAJP;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAUE;MAAK,SAAS,EAAER,OAAO,CAACgC,MAAxB;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAhDD;;GAAM1B,W;UACaD,W;;;KADbC,W;AAkDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}